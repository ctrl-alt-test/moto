// Generated with Shader Minifier 1.4.0 (https://github.com/laurentlb/Shader_Minifier/)
#ifndef SHADERS_INL_
# define SHADERS_INL_
# define VAR_a_position "c"
# define VAR_camFocal "E"
# define VAR_camPos "u"
# define VAR_camTa "O"
# define VAR_fragColor "v"
# define VAR_iTime "y"
# define VAR_sunDir "z"
# define VAR_tex "B"

const char *moto_frag =
 "#version 150\n"
 "out vec4 v;"
 "const vec2 f=vec2(1920,1080);"
 "vec2 m=vec2(700,900);"
 "uniform float y;\n"
 "#define iFrame 0\n"
 "#define MAX_SDF_STEPS 100\n"
 "#define MAX_HM_STEPS 50\n"
 "#define MAX_SHADOW_STEPS 32\n"
 "#define MAX_DIST 60.0\n"
 "#define MAX_SHADOW_DIST 10.0\n"
 "#define MAX_LIGHTS 6\n"
 "#define EPSILON 1e-4\n"
 "#define BOUNCE_OFFSET 1e-3\n"
 "#define PI acos(-1.)\n"
 "#define GAMMA 2.2\n"
 "#define ZERO min(iFrame,0)\n"
 "#define SPLINE_ABOUT_FOURTY_POINTS 0\n"
 "#define ENABLE_STOCHASTIC_MOTION_BLUR 1\n"
 "#define GROUND_ID 0\n"
 "#define BIDULE_ID 1\n"
 "vec2 M[]=vec2[](vec2(-5),vec2(5));"
 "float t(float v)"
 "{"
   "return fract(sin(v)*43758.5453);"
 "}"
 "float t(vec2 v)"
 "{"
   "return fract(sin(dot(v,vec2(12.9898,78.233)))*43758.5453);"
 "}"
 "float t(vec3 v)"
 "{"
   "return t(vec2(t(v.xy),v.z));"
 "}"
 "float s(vec2 v)"
 "{"
   "vec2 y=floor(v);"
   "v-=y;"
   "v=v*v*(3.-2.*v);"
   "float m=t(y),f=t(y+vec2(1,0)),i=t(y+vec2(0,1)),o=t(y+vec2(1));"
   "return mix(mix(m,f,v.x),mix(i,o,v.x),v.y);"
 "}"
 "float s(vec2 v,int y,float m,float x)"
 "{"
   "float f=0.,d=1.,i=1.,o=0.;"
   "for(int r=ZERO;r<y;++r)"
     "f+=d*s(i*v+o),d*=clamp(m,0.,1.),i*=1.+2.*clamp(x,0.,1.),o+=1.;"
   "return f;"
 "}"
 "vec3 s(float v,float m)"
 "{"
   "float f=cos(m);"
   "return 10.*vec3(f*cos(v),sin(m),f*sin(v));"
 "}"
 "void t(vec2 v,vec2 f,out vec3 y,out vec3 i)"
 "{"
   "f.y=clamp(f.y,0.,1.);"
   "vec3 m=s(2.*PI*f.x,PI*(.5-f.y)),x=normalize(vec3(0)-m),r=vec3(0,1,0);"
   "if(abs(dot(x,r))>.99)"
     "r=vec3(1,0,0);"
   "vec3 t=normalize(cross(x,r));"
   "r=normalize(cross(t,x));"
   "y=m;"
   "i=normalize(x+v.x*t+v.y*r);"
 "}"
 "float t(float v,float f)"
 "{"
   "float y=.01*(1./(1.-sqrt(.5)));"
   "return max(y,min(v,f))-length(max(y-vec2(v,f),0.));"
 "}"
 "float s(vec2 v,vec2 y,float m)"
 "{"
   "v=abs(v)-y+m;"
   "return length(max(v,0.))+min(max(v.x,v.y),0.)-m;"
 "}"
 "float s(vec3 v,vec3 y,float m)"
 "{"
   "v=abs(v)-y+m;"
   "return length(max(v,0.))+min(max(max(v.x,v.y),v.z),0.)-m;"
 "}\n"
 "#if SPLINE_ABOUT_FOURTY_POINTS\n"
 "#define SPLINE_SIZE 37\n"
 "#else\n"
 "#define SPLINE_SIZE 13\n"
 "#endif\n"
 "float i[SPLINE_SIZE/2];"
 "vec2 d[SPLINE_SIZE]=vec2[](vec2(-5),vec2(-3,-2),vec2(-5,0),vec2(-7,2),vec2(-5,5),vec2(-3,7),vec2(0,5),vec2(1,4),vec2(2,5),vec2(4,6),vec2(4,3),vec2(4,-2),vec2(8,3));"
 "vec4 t(float v,float y,float f)"
 "{"
   "float m=y-v*v/3.,i=m*m*m;"
   "y=v*(2.*v*v-9.*y)/27.+f;"
   "f=y*y+4.*i/27.;"
   "v=-v/3.;"
   "if(f>=0.)"
     "{"
       "float m=sqrt(f);"
       "vec2 i=(vec2(m,-m)-y)/2.;"
       "i=sign(i)*pow(abs(i),vec2(1)/3.);"
       "return vec4(v+i.x+i.y,0,0,1);"
     "}"
   "i=acos(-sqrt(-27./i)*y/2.)/3.;"
   "y=cos(i);"
   "i=sin(i)*sqrt(3.);"
   "return vec4(vec3(y+y,-i-y,i-y)*sqrt(-m/3.)+v,3);"
 "}"
 "float n(vec2 v,vec2 y)"
 "{"
   "return 2.*step(v.x*y.y,v.y*y.x)-1.;"
 "}"
 "vec2 n(vec2 v,vec2 y,vec2 f,vec2 m)"
 "{"
   "vec2 i=y-v;"
   "f+=v-y*2.;"
   "y=i*2.;"
   "v-=m;"
   "vec3 o=vec3(3.*dot(i,f),2.*dot(i,i)+dot(v,f),dot(v,i))/dot(f,f);"
   "vec4 r=t(o.x,o.y,o.z);"
   "i=clamp(r.xy,0.,1.);"
   "m=v+(y+f*i.x)*i.x;"
   "float x=dot(m,m);"
   "i=v+(y+f*i.y)*i.y;"
   "float S=dot(i,i);"
   "r=x<S?"
     "vec4(x,r.x,m):"
     "vec4(S,r.y,i);"
   "return vec2(n(r.zw,2.*f*r.y+y)*sqrt(r.x),r.y);"
 "}"
 "float x(vec2 v,vec2 y,vec2 f,float m)"
 "{"
   "f=2.*(v-2.*y+f);"
   "v=2.*(y-v);"
   "float i=dot(f,f),x=2.*dot(f,v)*.5f/i,o=dot(v,v)/i-x*x;"
   "v=vec2(0,m);"
   "y=sqrt((v+x)*(v+x)+o);"
   "v=sqrt(i)*.5*((x+v)*y+o*log(abs(x+v+y)));"
   "return v.y-v.x;"
 "}"
 "void n()"
 "{"
   "float v=0.;"
   "for(int y=0;y<SPLINE_SIZE-1;y+=2)"
     "{"
       "vec2 m=d[y],f=d[y+1],o=d[y+2];"
       "i[y/2]=v;"
       "v+=x(m,f,o,1.);"
     "}"
 "}"
 "vec4 n(vec2 v,vec2 y,vec2 f)"
 "{"
   "vec2 i=min(v,f),m=max(v,f);"
   "if(y.x<i.x||y.x>m.x||y.y<i.y||y.y>m.y)"
     "{"
       "vec2 r=clamp((v-y)/(v-2.*y+f),0.,1.),d=1.-r;"
       "r=d*d*v+2.*d*r*y+r*r*f;"
       "i=min(i,r);"
       "m=max(m,r);"
     "}"
   "return vec4(i,m);"
 "}"
 "float p(vec2 v,vec2 y,vec2 f,vec2 m)"
 "{"
   "vec4 i=n(y,f,m);"
   "return s(v-(i.xy+i.zw)/2.,(i.zw-i.xy)/2.,0.);"
 "}"
 "vec3 n(vec2 v)"
 "{"
   "vec3 f=vec3(3e10,0,0);"
   "for(int y=0;y<SPLINE_SIZE-1;y+=2)"
     "{"
       "vec2 m=d[y],o=d[y+1],r=d[y+2];"
       "if(p(v,m,o,r)-1.<=0.)"
         "{"
           "o=mix(o+vec2(1e-4),o,abs(sign(o*2.-m-r)));"
           "vec2 t=n(m,o,r,v);"
           "if(abs(t.x)<abs(f.x))"
             "{"
               "float v=x(m,o,r,clamp(t.y,0.,1.))+i[y/2];"
               "f=vec3(t.x,(clamp(t.y,0.,1.)+.5*float(y))/float(SPLINE_SIZE),v);"
             "}"
         "}"
     "}"
   "return f;"
 "}"
 "vec3 S=.5*vec3(.25,.5,1),o=vec3(1,.85,.7),a=.01*vec3(.07,.1,1),I=.02*vec3(.2,.8,1);"
 "struct material{vec3 emissive;vec3 albedo;float roughness;};"
 "vec3 p(vec2 v)"
 "{"
   "vec2 f=vec2(.7,0),i=vec2(6.5,1.5),m=vec2(26./6.,3),r=vec2(26,20),y=vec2(100);"
   "r=vec2(13,3);"
   "if(f.x>.25)"
     "r=i;"
   "if(f.x>.5)"
     "r=m;"
   "if(f.x>.75)"
     "r=y;"
   "y=vec2(6.5,3);"
   "f=vec2(fract(v.x/r.x)*r.x,v.y-floor(clamp(v.y,0.,3.5)/3.5)*3.5);"
   "i=vec2(fract((v.x+.4)/y.x)*y.x,v.y);"
   "float x=s(i-vec2(.5*y.y,3.5),vec2(.5*y.y,.1),.03),o=s(i-vec2(.5*y.y,-3.5),vec2(.5*y.y,.1),.03),z=s(f-vec2(.5*r.y,0),vec2(.5*r.y,.1),.01);"
   "return mix(vec3(1.-smoothstep(-length(fwidth(v)),0.,min(min(x,o),z))),vec3(fract(v),f.x),0.);"
 "}"
 "material p(int v,vec3 y,vec3 m)"
 "{"
   "if(v==GROUND_ID)"
     "{"
       "float v=t(floor(y.xz+.5));"
       "vec3 f=pow(vec3(67,81,70)/255.*1.5,vec3(GAMMA)),i=n(y.xz);"
       "v=1.-smoothstep(.5,.6,abs(i.x));"
       "vec3 m=vec3(0);"
       "if(v>0.)"
         "m=p(i.zx*8.);"
       "f=mix(f,m,v);"
       "return material(vec3(0),f,.5);"
     "}"
   "return v==BIDULE_ID?"
     "material(vec3(0),vec3(1),.25):"
     "material(vec3(0),fract(y.xyz),1.);"
 "}"
 "float x(vec3 v,float y,out int f)"
 "{"
   "v-=vec3(0,1,0);"
   "float i=length(v)-1.,m=s(v,vec3(1.25,.4,.9),.1);"
   "i=t(i,m);"
   "if(i<y)"
     "y=i,f=BIDULE_ID;"
   "if(y>EPSILON)"
     "f=-1;"
   "return y;"
 "}"
 "float e(vec2 v,int y,bool i)"
 "{"
   "vec2 r=m.xy/f.xy;"
   "float o=0.;"
   "{"
     "vec3 t=n(v);"
     "o=1.-smoothstep(.5,1.,abs(t.x));"
   "}"
   "float x=0.;"
   "if(o<1.)"
     "x=5.*s(v*.1,y,r.x,r.y)-5.;"
   "float t=0.;"
   "if(o>=0.)"
     "t=5.*s(v*.1,2,r.x,r.y)-5.+.2;"
   "return mix(x,t,o);"
 "}"
 "vec3 e(vec3 v,float y)"
 "{"
   "if(y>0.)"
     "{"
       "const vec2 i=vec2(1,-1);"
       "int f;"
       "return normalize(i.xyy*x(v+i.xyy*.01,1.,f)+i.yyx*x(v+i.yyx*.01,1.,f)+i.yxy*x(v+i.yxy*.01,1.,f)+i.xxx*x(v+i.xxx*.01,1.,f));"
     "}"
   "{"
     "vec3 f=v+vec3(.01,0,0);"
     "f.y=e(f.xz,6,true);"
     "vec3 i=v+vec3(0,0,.01);"
     "i.y=e(i.xz,6,true);"
     "return normalize(cross(i-v,f-v));"
   "}"
 "}"
 "float e(vec3 v,vec3 y,float f,int m,out vec3 i,out int r)"
 "{"
   "i=v;"
   "float o=0.;"
   "r=-1;"
   "for(int t=ZERO;t<m;++t)"
     "{"
       "float d=x(i,f-o,r);"
       "o+=d;"
       "i=v+o*y;"
       "if(d<EPSILON||o>=f)"
         "break;"
     "}"
   "return o;"
 "}"
 "float n(vec3 v,vec3 y,float f,int m,out vec3 i,out int r)"
 "{"
   "float x,o,t=0.;"
   "i=v;"
   "r=-1;"
   "for(int r=ZERO;r<m;++r)"
     "{"
       "o=f;"
       "x=t;"
       "f=i.y-e(i.xz,f<2.?"
         "6:"
         "4,f<4.);"
       "if(f<0.)"
         "{"
           "float m=f/o;"
           "t=(t-m*x)/(1.-m);"
           "i=v+t*y;"
           "break;"
         "}"
       "t=x+f*.8;"
       "i=v+t*y;"
     "}"
   "i.y=e(i.xz,6,true);"
   "r=GROUND_ID;"
   "return t;"
 "}"
 "vec2 e(vec3 v,vec3 f,float y,int m,int i,out vec3 o,out int r)"
 "{"
   "vec3 x;"
   "int t;"
   "float d=e(v,f,y,m,x,t);"
   "vec3 M;"
   "y=n(v,f,y,i,M,m);"
   "float S;"
   "r=d<y?"
     "S=d,o=x,t:"
     "(S=y,o=M,m);"
   "return vec2(S,float(d<y));"
 "}"
 "float r(vec3 v,vec3 y,vec3 f)"
 "{"
   "int m=-1;"
   "vec2 i=e(v+BOUNCE_OFFSET*y,f,MAX_SHADOW_DIST,MAX_SHADOW_STEPS,MAX_SHADOW_STEPS,v,m);"
   "return smoothstep(EPSILON,1.,i.x);"
 "}"
 "vec3 e(int v,vec3 f,vec3 y,vec3 i)"
 "{"
   "if(v<0)"
     "return vec3(0);"
   "material m=p(v,f,i);"
   "vec3 o=normalize(vec3(.4,.6,.8));"
   "float x=r(f,i,o);"
   "\n#if 1\n"
   "\n#else\n"
   "\n#endif\n"
   "float d=1.-dot(y,normalize(reflect(-y,i)+y));"
   "d*=d*d*d*d;"
   "return vec3(0)+m.emissive+(a*mix(1.,.1,i.y*i.y)*(i.x*.5+.5)+I*clamp(dot(i,o),0.,1.)*x)*m.albedo;"
 "}"
 "void mainImage(out vec4 v,vec2 m)"
 "{"
   "n();"
   "vec3 i,o;"
   "float x=y;"
   "\n#if ENABLE_STOCHASTIC_MOTION_BLUR\n"
   "x+=t(vec3(m,.001*y))*.008;"
   "\n#endif\n"
   "t((m/f.xy*2.-1.)*vec2(1,f.y/f.x),vec2(.02*x,.3),i,o);"
   "vec3 r;"
   "int z;"
   "vec2 M=e(i,o,MAX_DIST,MAX_SDF_STEPS,MAX_HM_STEPS,r,z);"
   "vec3 d=e(r,M.y),S=e(z,r,-o,d),a=pow(S,vec3(1./GAMMA));"
   "v=vec4(a,1);"
 "}"
 "void main()"
 "{"
   "mainImage(v,gl_FragCoord.xy);"
 "}";

const char *moto_vert =
 "#version 150\n"
 "in vec4 c;"
 "out vec3 z,u,O;"
 "out float E;"
 "uniform float y;"
 "void main()"
 "{"
   "gl_Position=c;"
   "float v=y;"
   "E=2.;"
   "z=normalize(vec3(3.5,1,-1));"
   "u=vec3(5.+v*.5,2,v*.5);"
   "O=vec3(0,2,0);"
 "}";

const char *fxaa_frag =
 "#version 150\n"
 "out vec4 v;"
 "const vec2 G=vec2(1920,1080);"
 "uniform sampler2D B;"
 "void main()"
 "{"
   "vec2 y=1./G,i=gl_FragCoord.xy*y;"
   "vec4 f=vec4(i,i-y*.5);"
   "vec3 m=vec3(.299,.587,.114);"
   "float r=dot(textureLod(B,f.zw,0.).xyz,m),o=dot(textureLod(B,f.zw+vec2(1,0)*y.xy,0.).xyz,m),x=dot(textureLod(B,f.zw+vec2(0,1)*y.xy,0.).xyz,m),t=dot(textureLod(B,f.zw+vec2(1)*y.xy,0.).xyz,m),S=dot(textureLod(B,f.xy,0.).xyz,m),d=min(S,min(min(r,o),min(x,t)));"
   "S=max(S,max(max(r,o),max(x,t)));"
   "i=vec2(-r-o+x+t,r+x-o-t);"
   "r=1./(min(abs(i.x),abs(i.y))+1./128.);"
   "i=min(vec2(8),max(vec2(-8),i*r))*y.xy;"
   "vec3 a=.5*(textureLod(B,f.xy+i*(1./3.-.5),0.).xyz+textureLod(B,f.xy+i*(2./3.-.5),0.).xyz),z=a*.5+.25*(textureLod(B,f.xy+i*-.5,0.).xyz+textureLod(B,f.xy+i*.5,0.).xyz);"
   "r=dot(z,m);"
   "v=r<d||r>S?"
     "vec4(a,1):"
     "vec4(z,1);"
 "}";

#endif // SHADERS_INL_
