// Generated with Shader Minifier 1.4.0 (https://github.com/laurentlb/Shader_Minifier/)
#ifndef SHADERS_INL_
# define SHADERS_INL_
# define VAR_a_position "Z"
# define VAR_camFocal "r"
# define VAR_camPos "y"
# define VAR_camTa "i"
# define VAR_fishEyeFactor "o"
# define VAR_fragColor "v"
# define VAR_iTime "x"
# define VAR_sunDir "z"
# define VAR_tex "E"

const char *preprocessed_scene_frag =
 "#version 150\n"
 "out vec4 v;"
 "const vec2 f=vec2(1920,1080);"
 "vec2 m=vec2(700,900);"
 "uniform float x;\n"
 "#define ZERO min(0,int(iTime))\n"
 "const float M=acos(-1.);"
 "struct light{vec3 p0;vec3 p1;vec3 color;float cosAngle;float collimation;float luminance;};"
 "struct material{vec3 emissive;vec3 albedo;float roughness;};"
 "float t(float v)"
 "{"
   "return fract(sin(v)*43758.5453);"
 "}"
 "float t(vec2 v)"
 "{"
   "return fract(sin(dot(v,vec2(12.9898,78.233)))*43758.5453);"
 "}"
 "float t(vec3 v)"
 "{"
   "return t(vec2(t(v.xy),v.z));"
 "}"
 "float n(vec2 v)"
 "{"
   "vec2 m=floor(v);"
   "v-=m;"
   "v=v*v*(3.-2.*v);"
   "float y=t(m),f=t(m+vec2(1,0)),i=t(m+vec2(0,1)),o=t(m+vec2(1));"
   "return mix(mix(y,f,v.x),mix(i,o,v.x),v.y);"
 "}"
 "float n(vec2 v,int y,float m,float x)"
 "{"
   "float f=0.,i=1.,r=1.,o=0.;"
   "for(int M=ZERO;M<y;++M)"
     "{"
       "float e=n(r*v+o)*2.-1.;"
       "f+=i*e;"
       "i*=clamp(m,0.,1.);"
       "r*=1.+2.*clamp(x,0.,1.);"
       "o+=1.;"
     "}"
   "return f;"
 "}"
 "float n(float v,float f)"
 "{"
   "float y=.01*(1./(1.-sqrt(.5)));"
   "return max(y,min(v,f))-length(max(y-vec2(v,f),0.));"
 "}"
 "float n(vec2 v,vec2 y,float x)"
 "{"
   "v=abs(v)-y+x;"
   "return length(max(v,0.))+min(max(v.x,v.y),0.)-x;"
 "}"
 "float n(vec3 v,vec3 y,float x)"
 "{"
   "v=abs(v)-y+x;"
   "return length(max(v,0.))+min(max(max(v.x,v.y),v.z),0.)-x;"
 "}"
 "vec4 t(float v,float y,float f)"
 "{"
   "float m=y-v*v/3.,i=m*m*m;"
   "y=v*(2.*v*v-9.*y)/27.+f;"
   "f=y*y+4.*i/27.;"
   "v=-v/3.;"
   "if(f>=0.)"
     "{"
       "float m=sqrt(f);"
       "vec2 i=(vec2(m,-m)-y)/2.;"
       "i=sign(i)*pow(abs(i),vec2(1)/3.);"
       "return vec4(v+i.x+i.y,0,0,1);"
     "}"
   "i=acos(-sqrt(-27./i)*y/2.)/3.;"
   "y=cos(i);"
   "i=sin(i)*sqrt(3.);"
   "return vec4(vec3(y+y,-i-y,i-y)*sqrt(-m/3.)+v,3);"
 "}"
 "float t(vec2 v,vec2 y)"
 "{"
   "return 2.*step(v.x*y.y,v.y*y.x)-1.;"
 "}"
 "vec2 t(vec2 v,vec2 y,vec2 f,vec2 i)"
 "{"
   "vec2 m=y-v;"
   "f+=v-y*2.;"
   "y=m*2.;"
   "v-=i;"
   "vec3 M=vec3(3.*dot(m,f),2.*dot(m,m)+dot(v,f),dot(v,m))/dot(f,f);"
   "vec4 r=t(M.x,M.y,M.z);"
   "m=clamp(r.xy,0.,1.);"
   "i=v+(y+f*m.x)*m.x;"
   "float d=dot(i,i);"
   "m=v+(y+f*m.y)*m.y;"
   "float x=dot(m,m);"
   "r=d<x?"
     "vec4(d,r.x,i):"
     "vec4(x,r.y,m);"
   "return vec2(t(r.zw,2.*f*r.y+y)*sqrt(r.x),r.y);"
 "}"
 "float s(vec2 v,vec2 y,vec2 f,float m)"
 "{"
   "f=2.*(v-2.*y+f);"
   "v=2.*(y-v);"
   "float i=dot(f,f),x=2.*dot(f,v)*.5/i,o=dot(v,v)/i-x*x;"
   "v=vec2(0,m);"
   "y=sqrt((v+x)*(v+x)+o);"
   "v=sqrt(i)*.5*((x+v)*y+o*log(abs(x+v+y)));"
   "return v.y-v.x;"
 "}"
 "vec4 s(vec2 v,vec2 y,vec2 f)"
 "{"
   "vec2 m=min(v,f),i=max(v,f);"
   "if(y.x<m.x||y.x>i.x||y.y<m.y||y.y>i.y)"
     "{"
       "vec2 x=clamp((v-y)/(v-2.*y+f),0.,1.),d=1.-x;"
       "x=d*d*v+2.*d*x*y+x*x*f;"
       "m=min(m,x);"
       "i=max(i,x);"
     "}"
   "return vec4(m,i);"
 "}"
 "float p(vec2 v,vec2 y,vec2 f,vec2 m)"
 "{"
   "vec4 i=s(y,f,m);"
   "return n(v-(i.xy+i.zw)/2.,(i.zw-i.xy)/2.,0.);"
 "}"
 "in vec3 y,i;"
 "in float r,o;\n"
 "#define MAX_SDF_STEPS 100\n"
 "#define MAX_HM_STEPS 50\n"
 "#define MAX_SHADOW_STEPS 32\n"
 "#define MAX_DIST 60.0\n"
 "#define MAX_SHADOW_DIST 10.0\n"
 "#define MAX_LIGHTS 6\n"
 "#define EPSILON 1e-4\n"
 "#define BOUNCE_OFFSET 1e-3\n"
 "#define GAMMA 2.2\n"
 "#define SPLINE_ABOUT_FOURTY_POINTS 0\n"
 "#define ENABLE_STOCHASTIC_MOTION_BLUR 1\n"
 "#define GROUND_ID 0\n"
 "#define BIDULE_ID 1\n"
 "vec2 l[]=vec2[](vec2(-5),vec2(5));\n"
 "#define SPLINE_SIZE 13\n"
 "float c[SPLINE_SIZE/2];"
 "vec2 d[SPLINE_SIZE]=vec2[](vec2(-5),vec2(-3,-2),vec2(-5,0),vec2(-7,2),vec2(-5,5),vec2(-3,7),vec2(0,5),vec2(1,4),vec2(2,5),vec2(4,6),vec2(4,3),vec2(4,-2),vec2(8,3));"
 "void n()"
 "{"
   "float v=0.;"
   "for(int f=0;f<SPLINE_SIZE-1;f+=2)"
     "{"
       "vec2 y=d[f],i=d[f+1],m=d[f+2];"
       "c[f/2]=v;"
       "v+=s(y,i,m,1.);"
     "}"
 "}"
 "vec3 p(vec2 v)"
 "{"
   "vec3 i=vec3(3e10,0,0);"
   "for(int f=0;f<SPLINE_SIZE-1;f+=2)"
     "{"
       "vec2 y=d[f],m=d[f+1],x=d[f+2];"
       "if(p(v,y,m,x)-1.<=0.)"
         "{"
           "m=mix(m+vec2(1e-4),m,abs(sign(m*2.-y-x)));"
           "vec2 r=t(y,m,x,v);"
           "if(abs(r.x)<abs(i.x))"
             "{"
               "float v=s(y,m,x,clamp(r.y,0.,1.))+c[f/2];"
               "i=vec3(r.x,(clamp(r.y,0.,1.)+.5*float(f))/float(SPLINE_SIZE),v);"
             "}"
         "}"
     "}"
   "return i;"
 "}"
 "vec3 a=.5*vec3(.25,.5,1),B=vec3(1,.85,.7),b=.01*vec3(.07,.1,1),g=.02*vec3(.2,.8,1);"
 "struct material{vec3 emissive;vec3 albedo;float roughness;};"
 "vec3 s(vec2 v)"
 "{"
   "vec2 f=vec2(.7,0),i=vec2(6.5,1.5),m=vec2(26./6.,3),r=vec2(26,20),y=vec2(100);"
   "r=vec2(13,3);"
   "if(f.x>.25)"
     "r=i;"
   "if(f.x>.5)"
     "r=m;"
   "if(f.x>.75)"
     "r=y;"
   "y=vec2(6.5,3);"
   "f=vec2(fract(v.x/r.x)*r.x,v.y-floor(clamp(v.y,0.,3.5)/3.5)*3.5);"
   "i=vec2(fract((v.x+.4)/y.x)*y.x,v.y);"
   "float x=n(i-vec2(.5*y.y,3.5),vec2(.5*y.y,.1),.03),o=n(i-vec2(.5*y.y,-3.5),vec2(.5*y.y,.1),.03),M=n(f-vec2(.5*r.y,0),vec2(.5*r.y,.1),.01);"
   "return mix(vec3(1.-smoothstep(-length(fwidth(v)),0.,min(min(x,o),M))),vec3(fract(v),f.x),0.);"
 "}"
 "material p(int v,vec3 y,vec3 f)"
 "{"
   "if(v==GROUND_ID)"
     "{"
       "float v=t(floor(y.xz+.5));"
       "vec3 f=pow(vec3(67,81,70)/255.*1.5,vec3(GAMMA)),i=p(y.xz);"
       "v=1.-smoothstep(.5,.6,abs(i.x));"
       "vec3 m=vec3(0);"
       "if(v>0.)"
         "m=s(i.zx*8.);"
       "f=mix(f,m,v);"
       "return material(vec3(0),f,.5);"
     "}"
   "return v==BIDULE_ID?"
     "material(vec3(0),vec3(1),.25):"
     "material(vec3(0),fract(y.xyz),1.);"
 "}"
 "float e(vec3 v,float y,out int f)"
 "{"
   "v-=vec3(0,1,0);"
   "float m=length(v)-1.,i=n(v,vec3(1.25,.4,.9),.1);"
   "m=n(m,i);"
   "if(m<y)"
     "y=m,f=BIDULE_ID;"
   "if(y>EPSILON)"
     "f=-1;"
   "return y;"
 "}"
 "float h(vec2 v,int y,bool x)"
 "{"
   "vec2 i=m.xy/f.xy;"
   "float r=0.;"
   "{"
     "vec3 M=p(v);"
     "r=1.-smoothstep(.5,1.,abs(M.x));"
   "}"
   "float M=0.;"
   "if(r<1.)"
     "M=5.*n(v*.1,y,i.x,i.y)-5.;"
   "float o=0.;"
   "if(r>=0.)"
     "o=5.*n(v*.1,2,i.x,i.y)-5.+.2;"
   "return mix(M,o,r);"
 "}"
 "vec3 e(vec3 v,float m)"
 "{"
   "if(m>0.)"
     "{"
       "const vec2 m=vec2(1,-1);"
       "int f;"
       "return normalize(m.xyy*e(v+m.xyy*.01,1.,f)+m.yyx*e(v+m.yyx*.01,1.,f)+m.yxy*e(v+m.yxy*.01,1.,f)+m.xxx*e(v+m.xxx*.01,1.,f));"
     "}"
   "{"
     "vec3 f=v+vec3(.01,0,0);"
     "f.y=h(f.xz,6,true);"
     "vec3 i=v+vec3(0,0,.01);"
     "i.y=h(i.xz,6,true);"
     "return normalize(cross(i-v,f-v));"
   "}"
 "}"
 "float e(vec3 v,vec3 y,float f,int m,out vec3 i,out int r)"
 "{"
   "i=v;"
   "float x=0.;"
   "r=-1;"
   "for(int M=ZERO;M<m;++M)"
     "{"
       "float d=e(i,f-x,r);"
       "x+=d;"
       "i=v+x*y;"
       "if(d<EPSILON||x>=f)"
         "break;"
     "}"
   "return x;"
 "}"
 "float h(vec3 v,vec3 y,float f,int m,out vec3 i,out int r)"
 "{"
   "float x,o,M=0.;"
   "i=v;"
   "r=-1;"
   "for(int r=ZERO;r<m;++r)"
     "{"
       "o=f;"
       "x=M;"
       "f=i.y-h(i.xz,f<2.?"
         "6:"
         "4,f<4.);"
       "if(f<0.)"
         "{"
           "float m=f/o;"
           "M=(M-m*x)/(1.-m);"
           "i=v+M*y;"
           "break;"
         "}"
       "M=x+f*.8;"
       "i=v+M*y;"
     "}"
   "i.y=h(i.xz,6,true);"
   "r=GROUND_ID;"
   "return M;"
 "}"
 "vec2 e(vec3 v,vec3 f,float m,int y,int i,out vec3 x,out int r)"
 "{"
   "vec3 M;"
   "int o;"
   "float d=e(v,f,m,y,M,o);"
   "vec3 t;"
   "m=h(v,f,m,i,t,y);"
   "float a;"
   "r=d<m?"
     "a=d,x=M,o:"
     "(a=m,x=t,y);"
   "return vec2(a,float(d<m));"
 "}"
 "float G(vec3 v,vec3 y,vec3 f)"
 "{"
   "int m=-1;"
   "vec2 i=e(v+BOUNCE_OFFSET*y,f,MAX_SHADOW_DIST,MAX_SHADOW_STEPS,MAX_SHADOW_STEPS,v,m);"
   "return smoothstep(EPSILON,1.,i.x);"
 "}"
 "vec3 G(int v,vec3 m,vec3 y,vec3 f)"
 "{"
   "if(v<0)"
     "return vec3(0);"
   "material i=p(v,m,f);"
   "vec3 x=normalize(vec3(.4,.6,.8));"
   "float r=G(m,f,x),o=1.-dot(y,normalize(reflect(-y,f)+y));"
   "o*=o*o*o*o;"
   "return vec3(0)+i.emissive+(a*(f.y*.5+.5)+B*clamp(dot(f,x),0.,1.)*r)*i.albedo;"
 "}"
 "mat3 G(vec3 v,vec3 f)"
 "{"
   "v=normalize(f-v);"
   "f=normalize(cross(v,normalize(vec3(0,1,0))));"
   "return mat3(f,cross(f,v),v);"
 "}"
 "void mainImage(out vec4 v,vec2 m)"
 "{"
   "n();"
   "float M=x;"
   "M+=t(vec3(m,.001*x))*.008;"
   "vec2 a=(m/f.xy*2.-1.)*vec2(1,f.y/f.x)*2.-1.;"
   "vec3 d=y,z=G(d,i)*normalize(vec3(a,r-length(a)*o)),c;"
   "int s;"
   "a=e(d,z,MAX_DIST,MAX_SDF_STEPS,MAX_HM_STEPS,c,s);"
   "d=e(c,a.y);"
   "d=G(s,c,-z,d);"
   "d=pow(d,vec3(1./GAMMA));"
   "v=vec4(d,1);"
 "}"
 "void main()"
 "{"
   "mainImage(v,gl_FragCoord.xy);"
 "}";

const char *scene_vert =
 "#version 150\n"
 "in vec4 Z;"
 "out vec3 z,y,i;"
 "out float r,o;"
 "uniform float x;"
 "void main()"
 "{"
   "gl_Position=Z;"
   "float v=x;"
   "r=2.;"
   "o=0.;"
   "z=normalize(vec3(3.5,1,-1));"
   "i=v<5.?"
     "y=vec3(5.+v*.5,2,v*.5),vec3(0,2,0):"
     "(y=vec3(7.5,2,2.5),vec3(0,2,0));"
 "}";

const char *fxaa_frag =
 "#version 150\n"
 "out vec4 v;"
 "const vec2 S=vec2(1920,1080);"
 "uniform sampler2D E;"
 "void main()"
 "{"
   "vec2 y=1./S,f=gl_FragCoord.xy*y;"
   "vec4 i=vec4(f,f-y*.5);"
   "vec3 m=vec3(.299,.587,.114);"
   "float x=dot(textureLod(E,i.zw,0.).xyz,m),o=dot(textureLod(E,i.zw+vec2(1,0)*y.xy,0.).xyz,m),r=dot(textureLod(E,i.zw+vec2(0,1)*y.xy,0.).xyz,m),M=dot(textureLod(E,i.zw+vec2(1)*y.xy,0.).xyz,m),d=dot(textureLod(E,i.xy,0.).xyz,m),a=min(d,min(min(x,o),min(r,M)));"
   "d=max(d,max(max(x,o),max(r,M)));"
   "f=vec2(-x-o+r+M,x+r-o-M);"
   "x=1./(min(abs(f.x),abs(f.y))+1./128.);"
   "f=min(vec2(8),max(vec2(-8),f*x))*y.xy;"
   "vec3 t=.5*(textureLod(E,i.xy+f*(1./3.-.5),0.).xyz+textureLod(E,i.xy+f*(2./3.-.5),0.).xyz),z=t*.5+.25*(textureLod(E,i.xy+f*-.5,0.).xyz+textureLod(E,i.xy+f*.5,0.).xyz);"
   "x=dot(z,m);"
   "v=x<a||x>d?"
     "vec4(t,1):"
     "vec4(z,1);"
 "}";

#endif // SHADERS_INL_
